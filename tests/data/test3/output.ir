; ModuleID = 'tests/data/test3/input.hff'
source_filename = "tests/data/test3/input.hff.ir"

%Student = type <{ i8*, i32 }>

@0 = private unnamed_addr constant [4 x i8] c"ala\00", align 1

declare i32 @puts(i8*)

declare i32 @sprintf(i8*, i8*, ...)

define i8* @get_name(%Student* %s) {
entry:
  %attr = getelementptr inbounds %Student, %Student* %s, i32 0, i32 0
  %load = load i8*, i8** %attr, align 8
  ret i8* %load
}

define i32 @get_age(%Student* %s) {
entry:
  %attr = getelementptr inbounds %Student, %Student* %s, i32 0, i32 1
  %load = load i32, i32* %attr, align 4
  ret i32 %load
}

define i32 @main() {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (%Student* getelementptr (%Student, %Student* null, i32 1) to i32))
  %malloc = bitcast i8* %malloccall to %Student*
  store %Student <{ i8* getelementptr inbounds ([4 x i8], [4 x i8]* @0, i32 0, i32 0), i32 32 }>, %Student* %malloc, align 1
  ret i32 33
}

declare noalias i8* @malloc(i32)
